[build-system]
requires = ["setuptools>=61.0", "wheel", "build>=0.7.0"]
build-backend = "setuptools.build_meta"

[project]
name = "od-parse"
version = "0.1.0"
description = "A library for parsing complex PDFs and generating Markdown"
authors = [
    {name = "OctonData", email = "info@octondata.com"}
]
readme = "README.md"
requires-python = ">=3.8"
license = {file = "LICENSE"}
keywords = ["pdf", "parser", "markdown", "ocr", "handwritten", "tables"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Text Processing :: Markup",
    "Topic :: Scientific/Engineering :: Image Processing",
]

[project.urls]
"Homepage" = "https://github.com/OctonData/od-parse"
"Bug Tracker" = "https://github.com/OctonData/od-parse/issues"

dependencies = [
    "pdfminer.six>=20221105",
    "pytesseract>=0.3.10",
    "Pillow>=9.5.0",
    "pdf2image>=1.16.3",
    "numpy>=1.24.3",
    "opencv-python>=4.7.0.72",
    "tabula-py>=2.7.0",
    "markdown>=3.4.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.3.1",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "pre-commit>=3.5.0",
    "pytest-cov>=4.1.0",
]

[tool.ruff]
line-length = 88
target-version = "py38"
src = ["od_parse", "tests"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
    "N",  # pep8-naming
    "YTT", # flake8-2020
    "S",  # flake8-bandit
    "TCH", # flake8-type-checking
]

ignore = ["E501"]
fixable = ["I001", "F401", "UP"]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["S101"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "lf"

[tool.ruff.lint.isort]
split-on-trailing-comma = true
force-wrap-aliases = true

[tool.mypy]
python_version = "3.8"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_optional = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
addopts = "--cov=od_parse --cov-report=term-missing -v"
testpaths = ["tests"]
